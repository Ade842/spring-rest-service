DROP schema adelisa99 cascade;
DROP role if exists adelisa99;
CREATE SCHEMA adelisa99
CREATE TABLE  IF NOT EXISTS adelisa99.user_table (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    display_name character varying(255),
    display_surname character varying(255) ,
    email character varying(255) ,
    phone_number character varying(255),
	created_at timestamp NOT NULL DEFAULT NOW(),
	updated_at timestamp NOT NULL DEFAULT NOW(),
	deleted  BOOLEAN DEFAULT FALSE,
    CONSTRAINT user_table_pkey PRIMARY KEY (id),
    CONSTRAINT uk_1cj1c5umljjjqx8wvju3cjp9j UNIQUE (phone_number),
    CONSTRAINT uk_eamk4l51hm6yqb8xw37i23kb5 UNIQUE (email)
);
CREATE TABLE IF NOT EXISTS adelisa99.category
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    category_name character varying(255),
    user_id bigint,
    CONSTRAINT category_pkey PRIMARY KEY (id),
	FOREIGN KEY (user_id) REFERENCES adelisa99.user_table(id)
);

CREATE TABLE IF NOT EXISTS adelisa99.advertisements
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title character varying(255),
    description character varying(255) ,
    user_id bigint,
	created_at timestamp NOT NULL DEFAULT NOW(),
	updated_at timestamp NOT NULL DEFAULT NOW(),
	deleted  BOOLEAN DEFAULT FALSE,
	category_id bigint,
    CONSTRAINT advertisements_pkey PRIMARY KEY (id),
	FOREIGN KEY (user_id) REFERENCES adelisa99.user_table(id),
	FOREIGN KEY (category_id) REFERENCES adelisa99.category(id)

);


CREATE USER adelisa99 with encrypted password 'mypassword3';
GRANT USAGE ON SCHEMA adelisa99 TO adelisa99;
grant all PRIVILEGES on adelisa99.user_table to adelisa99;
